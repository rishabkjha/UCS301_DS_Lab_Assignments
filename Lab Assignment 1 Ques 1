#include <iostream>
using namespace std;
int arr[100], n = 0;
void create() {
    cout << "Enter no. of elements: ";
    cin >> n;
    cout << "Enter elements: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
}
void display() {
    if (n == 0) {
        cout << "Array is empty\n";
        return;
    }
    cout << "Array elements: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}
void insert() {
    int pos, val;
    cout << "Enter position: ";
    cin >> pos;
    cout << "Enter value: ";
    cin >> val;
    pos = pos-1;
    if (pos < 0 || pos > n) {
        cout << "Invalid position\n";
        return;
    }
    for (int i = n; i > pos; i--) {
        arr[i] = arr[i - 1];
    }
    arr[pos] = val;
    n++;
}
void Delete() {
    int pos;
    cout << "Enter position: ";
    cin >> pos;
    pos = pos - 1;
    if (pos < 0 || pos >= n) {
        cout << "Invalid position\n";
        return;
    }
    for (int i = pos; i < n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    n--;
}
void linearsearch() {
    int key, found = 0;
    cout << "Enter element to search: ";
    cin >> key;
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            cout << "Element found at index " << i << endl;
            found = 1;
            break;
        }
    }
    if (!found) {
        cout << "Element not found\n";
        return;
    }
}
int main() {
    int choice;
    do {
        cout << "\n---MENU---\n";
        cout << "1.CREATE\n2.DISPLAY\n3.INSERT\n4.DELETE\n5.LINEAR SEARCH\n6.EXIT\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: create(); 
            break;
            case 2: display(); 
            break;
            case 3: insert(); 
            break;
            case 4: Delete(); 
            break;
            case 5: linearsearch(); 
            break;
            case 6: cout << "Exited\n"; 
            break;
            default: cout << "Invalid choice\n";
        }
    } while (choice != 6);
    return 0;
}
